/*
 * This file was automatically generated by EvoSuite
 * Sat Dec 03 18:31:37 EET 2016
 */


import static org.evosuite.runtime.EvoAssertions.assertThrownBy;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.fail;

import java.util.ArrayList;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true) 
public class Student_ESTest extends Student_ESTest_scaffolding {

  @Test
  public void test0()  throws Throwable  {
      Student student0 = new Student("Wednesday", "Wednesday");
      student0.setID("Wednesday");
      String string0 = student0.toString();
      assertEquals("Student ID : Wednesday Name: Wednesday\nCourses : WeeklySchedule : \nMonday : []\nTuesday : []\nWednesday : []\nThursday : []\nFriday : []\n", string0);
  }

  @Test
  public void test1()  throws Throwable  {
      Student student0 = new Student("Wednesday", "Wednesday");
      ArrayList<Course> arrayList0 = student0.coursesTaken;
      ArrayList<Instructor> arrayList1 = new ArrayList<Instructor>();
      Room room0 = new Room();
      MeetingTime meetingTime0 = new MeetingTime("Wednesday", "Wednesday", "Wednesday", room0);
      Schedule schedule0 = new Schedule("Wednesday", "Wednesday", meetingTime0);
      Course course0 = new Course("Wednesday", "Wednesday", "Wednesday", arrayList1, schedule0);
      ArrayList<String> arrayList2 = new ArrayList<String>();
      room0.roomCodes = arrayList2;
      arrayList0.add(course0);
      String string0 = student0.toString();
      assertEquals("Student ID : Wednesday Name: Wednesday\nCourses : Wednesday Wednesday Wednesday\nWeeklySchedule : \nMonday : []\nTuesday : []\nWednesday : [Wednesday Wednesday Wednesday Wednesday-Wednesday /  Room: []]\nThursday : []\nFriday : []\n", string0);
  }

  @Test
  public void test2()  throws Throwable  {
      Student student0 = new Student(" Room: ", " Room: ");
      ArrayList<Course> arrayList0 = student0.coursesTaken;
      ArrayList<Instructor> arrayList1 = new ArrayList<Instructor>();
      MeetingTime meetingTime0 = new MeetingTime("Friday", "Friday", " Room: ", (Room) null);
      Schedule schedule0 = new Schedule(" Room: ", " Room: ", meetingTime0);
      Course course0 = new Course(" Room: ", " Room: ", " Room: ", arrayList1, schedule0);
      arrayList0.add(course0);
      String string0 = student0.toString();
      assertEquals("Student ID :  Room:  Name:  Room: \nCourses :  Room:   Room:   Room: \nWeeklySchedule : \nMonday : []\nTuesday : []\nWednesday : []\nThursday : []\nFriday : [ Room:   Room:   Room:  Friday- Room:  / null]\n", string0);
  }

  @Test
  public void test3()  throws Throwable  {
      Student student0 = new Student("Tuesday", "Tuesday");
      ArrayList<String> arrayList0 = new ArrayList<String>();
      Room room0 = new Room(arrayList0);
      MeetingTime meetingTime0 = new MeetingTime("Tuesday", "Tuesday", "Tuesday", room0);
      Schedule schedule0 = new Schedule("Tuesday", "Tuesday", meetingTime0);
      ArrayList<Course> arrayList1 = student0.coursesTaken;
      ArrayList<Instructor> arrayList2 = new ArrayList<Instructor>();
      Course course0 = new Course("Tuesday", "Tuesday", "Tuesday", arrayList2, schedule0);
      arrayList1.add(course0);
      String string0 = student0.toString();
      assertEquals("Student ID : Tuesday Name: Tuesday\nCourses : Tuesday Tuesday Tuesday\nWeeklySchedule : \nMonday : []\nTuesday : [Tuesday Tuesday Tuesday Tuesday-Tuesday /  Room: []]\nWednesday : []\nThursday : []\nFriday : []\n", string0);
  }

  @Test
  public void test4()  throws Throwable  {
      Student student0 = new Student("9.Dx/xx#6", "9.Dx/xx#6");
      ArrayList<Course> arrayList0 = student0.coursesTaken;
      ArrayList<Instructor> arrayList1 = new ArrayList<Instructor>();
      MeetingTime meetingTime0 = new MeetingTime("9.Dx/xx#6", "9.Dx/xx#6", "9.Dx/xx#6", (Room) null);
      Schedule schedule0 = new Schedule("9.Dx/xx#6", "9.Dx/xx#6", meetingTime0);
      Course course0 = new Course("9.Dx/xx#6", "9.Dx/xx#6", "9.Dx/xx#6", arrayList1, schedule0);
      arrayList0.add(course0);
      String string0 = student0.toString();
      assertEquals("Student ID : 9.Dx/xx#6 Name: 9.Dx/xx#6\nCourses : 9.Dx/xx#6 9.Dx/xx#6 9.Dx/xx#6\nWeeklySchedule : \nMonday : []\nTuesday : []\nWednesday : []\nThursday : []\nFriday : []\n", string0);
  }

  @Test
  public void test5()  throws Throwable  {
      Student student0 = new Student("9.Dx/xx#6", "9.Dx/xx#6");
      ArrayList<Course> arrayList0 = student0.coursesTaken;
      ArrayList<Instructor> arrayList1 = new ArrayList<Instructor>();
      Schedule schedule0 = new Schedule();
      Course course0 = new Course("9.Dx/xx#6", "9.Dx/xx#6", "9.Dx/xx#6", arrayList1, schedule0);
      arrayList0.add(course0);
      String string0 = student0.toString();
      assertEquals("Student ID : 9.Dx/xx#6 Name: 9.Dx/xx#6\nCourses : 9.Dx/xx#6 9.Dx/xx#6 9.Dx/xx#6\nWeeklySchedule : \nMonday : []\nTuesday : []\nWednesday : []\nThursday : []\nFriday : []\n", string0);
  }

  @Test
  public void test6()  throws Throwable  {
      Student student0 = new Student("", "b'");
      String string0 = student0.getName();
      assertEquals("b'", student0.getID());
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test
  public void test7()  throws Throwable  {
      Student student0 = new Student("r?OUU(NrK", "__5Y#=3OAtO");
      String string0 = student0.getID();
      assertEquals("__5Y#=3OAtO", string0);
      assertNotNull(string0);
  }

  @Test
  public void test8()  throws Throwable  {
      Student student0 = new Student("&m<nT2?J|&A", "");
      student0.setName("A!");
      assertEquals("A!", student0.getName());
  }

  @Test
  public void test9()  throws Throwable  {
      Student student0 = new Student("Wednesday", "Wednesday");
      ArrayList<Course> arrayList0 = student0.coursesTaken;
      ArrayList<Instructor> arrayList1 = new ArrayList<Instructor>();
      Room room0 = new Room();
      MeetingTime meetingTime0 = new MeetingTime("Wednesday", "Wednesday", "Wednesday", room0);
      Schedule schedule0 = new Schedule("Wednesday", "Wednesday", meetingTime0);
      Course course0 = new Course("Wednesday", "Wednesday", "Wednesday", arrayList1, schedule0);
      arrayList0.add(course0);
      // Undeclared exception!
      try { 
        student0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("Room", e);
      }
  }
}
